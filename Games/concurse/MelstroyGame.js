// ===== –ò–ì–†–ê MELLSTROY SHIP ‚Äî –ü–†–û–ö–ê–ß–ê–ù–ù–ê–Ø –í–ï–†–°–ò–Ø =====

const canvas = document.getElementById("game");
const ctx = canvas.getContext("2d");

const shipImg = new Image();
shipImg.src = "images/melstroy.png";
const itemImages = [
  "images/coin1.png",
  "images/coin2.png",
  "images/coin3.png",
  "images/coin4.png",
  "images/coin5.png",
  "images/coin6.png",
  "images/coin7.png",
  "images/coin8.png",
  "images/coin9.png"
];



const coinSound = new Audio("Audio/AmAmAm.mp3");
const crashSound = new Audio("Audio/CrashMell.mp3");


// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–≤—É–∫–æ–≤
coinSound.volume = 0.2;        // —É–º–µ—Ä–µ–Ω–Ω–∞—è –≥—Ä–æ–º–∫–æ—Å—Ç—å
coinSound.playbackRate = 1.2;  // –Ω–µ–º–Ω–æ–≥–æ –±—ã—Å—Ç—Ä–µ–µ

crashSound.volume = 1.0;
crashSound.playbackRate = 1.1;

// ===== –ú–£–ó–´–ö–ê –§–û–ù–ê =====
const bgMusic = new Audio("Audio/FonMell.mp3"); // –ø—É—Ç—å –∫ —Ç–≤–æ–µ–º—É —Ñ–∞–π–ª—É
bgMusic.loop = true;     // –∑–∞—Ü–∏–∫–ª–∏–≤–∞–µ–º
bgMusic.volume = 1.0;    // –≥—Ä–æ–º–∫–æ—Å—Ç—å (0.0‚Äì1.0)
bgMusic.playbackRate = 1.0; // —Å–∫–æ—Ä–æ—Å—Ç—å (1.0 = –æ–±—ã—á–Ω–∞—è)



let ship = { x: 100, y: 300, width: 60, height: 60, speed: 5 };

let score = 0;
let money = [];
let walls = [];
let stars = [];
let keys = {};

// ==== –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è ====
let gameRunning = false;
let gamePaused = false;
let moneyInterval;
let wallInterval;
let animationFrame;

// ===== –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–æ–Ω–∞ —Å–æ –∑–≤—ë–∑–¥–∞–º–∏ =====
for (let i = 0; i < 120; i++) {
  stars.push({
    x: Math.random() * canvas.width,
    y: Math.random() * canvas.height,
    size: Math.random() * 2,
    speed: 0.5 + Math.random() * 1.5
  });
}

// ===== –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ =====
document.addEventListener("keydown", e => keys[e.key] = true);
document.addEventListener("keyup", e => keys[e.key] = false);

function collide(a, b) {
  return a.x < b.x + b.width &&
         a.x + a.width > b.x &&
         a.y < b.y + b.height &&
         a.y + a.height > b.y;
}

// ======== –£–ü–†–ê–í–õ–ï–ù–ò–ï –î–õ–Ø –¢–ï–õ–ï–§–û–ù–û–í ========

let touchStartX = 0;
let touchStartY = 0;
let touchEndX = 0;
let touchEndY = 0;

canvas.addEventListener("touchstart", e => {
  const touch = e.touches[0];
  touchStartX = touch.clientX;
  touchStartY = touch.clientY;
});

canvas.addEventListener("touchend", e => {
  const touch = e.changedTouches[0];
  touchEndX = touch.clientX;
  touchEndY = touch.clientY;

  handleSwipe();
});

function handleSwipe() {
  const diffX = touchEndX - touchStartX;
  const diffY = touchEndY - touchStartY;

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ –∫–∞–∫–æ–π –æ—Å–∏ –¥–≤–∏–∂–µ–Ω–∏–µ –±–æ–ª—å—à–µ
  if (Math.abs(diffX) > Math.abs(diffY)) {
    // –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π —Å–≤–∞–π–ø
    if (diffX > 30) {
      ship.x += ship.speed * 10; // –≤–ø—Ä–∞–≤–æ
    } else if (diffX < -30) {
      ship.x -= ship.speed * 10; // –≤–ª–µ–≤–æ
    }
  } else {
    // –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π —Å–≤–∞–π–ø
    if (diffY > 30) {
      ship.y += ship.speed * 10; // –≤–Ω–∏–∑
    } else if (diffY < -30) {
      ship.y -= ship.speed * 10; // –≤–≤–µ—Ä—Ö
    }
  }

  // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–≤–∏–∂–µ–Ω–∏–µ –∑–∞ –≥—Ä–∞–Ω–∏—Ü—ã
  if (ship.x < 0) ship.x = 0;
  if (ship.x + ship.width > canvas.width) ship.x = canvas.width - ship.width;
  if (ship.y < 0) ship.y = 0;
  if (ship.y + ship.height > canvas.height) ship.y = canvas.height - ship.height;
}

// ===== –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–Ω–µ–≥ =====
function spawnMoney() {
  const img = new Image();
  img.src = itemImages[Math.floor(Math.random() * itemImages.length)]; // –≤—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ

  const m = {
    x: canvas.width,
    y: Math.random() * (canvas.height - 40),
    width: 45,
    height: 45,
    img: img // —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É –¥–ª—è –∫–∞–∂–¥–æ–π –º–æ–Ω–µ—Ç—ã
  };
  money.push(m);
}

function spawnWall() {
  const h = 80 + Math.random() * 220;
  const y = Math.random() < 0.5 ? 0 : canvas.height - h;
  const moving = Math.random() < 0.4;
  const w = {
    x: canvas.width,
    y: y,
    width: 40,
    height: h,
    speedY: moving ? (Math.random() * 2 + 1) * (Math.random() < 0.5 ? 1 : -1) : 0
  };
  walls.push(w);
}

function update() {
  if (!gameRunning || gamePaused) return;

  // —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ WASD –∏ –§–¶–´–í (—Ä—É—Å—Å–∫–∞—è —Ä–∞—Å–∫–ª–∞–¥–∫–∞)
  if (keys["w"] || keys["W"] || keys["—Ü"] || keys["–¶"]) ship.y -= ship.speed;
  if (keys["s"] || keys["S"] || keys["—ã"] || keys["–´"]) ship.y += ship.speed;
  if (keys["a"] || keys["A"] || keys["—Ñ"] || keys["–§"]) ship.x -= ship.speed;
  if (keys["d"] || keys["D"] || keys["–≤"] || keys["–í"]) ship.x += ship.speed;

  if (ship.y < 0) ship.y = 0;
  if (ship.y + ship.height > canvas.height) ship.y = canvas.height - ship.height;
  if (ship.x < 0) ship.x = 0;
  if (ship.x + ship.width > canvas.width) ship.x = canvas.width - ship.width;

  stars.forEach(star => {
    star.x -= star.speed;
    if (star.x < 0) {
      star.x = canvas.width;
      star.y = Math.random() * canvas.height;
      star.size = Math.random() * 2;
    }
  });

  money.forEach(m => m.x -= 4);
  walls.forEach(w => {
    w.x -= 4;
    w.y += w.speedY;
    if (w.y < 0 || w.y + w.height > canvas.height) w.speedY *= -1;
  });

  money = money.filter(m => m.x + m.width > 0);
  walls = walls.filter(w => w.x + w.width > 0);

  money.forEach((m, i) => {
    if (collide(ship, m)) {
      score++;
      coinSound.currentTime = 0;
      coinSound.play();
      money.splice(i, 1);
    }
  });

  walls.forEach(w => {
    if (collide(ship, w)) {
      crashSound.play();
      alert("üí• –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞!\n–¢–≤–æ–∏ –æ—á–∫–∏: " + score);
      window.restartGame();
    }
  });
}


function draw() {
  ctx.fillStyle = "black";
  ctx.fillRect(0, 0, canvas.width, canvas.height);

  ctx.fillStyle = "white";
  stars.forEach(star => {
    ctx.beginPath();
    ctx.arc(star.x, star.y, star.size, 0, Math.PI * 2);
    ctx.fill();
  });

  // üí∞ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: —Ç–µ–ø–µ—Ä—å –∫–∞–∂–¥–∞—è –º–æ–Ω–µ—Ç–∞ —Ä–∏—Å—É–µ—Ç—Å—è —Å–æ —Å–≤–æ–∏–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
  money.forEach(m => ctx.drawImage(m.img, m.x, m.y, m.width, m.height));

  ctx.fillStyle = "#3366ff";
  walls.forEach(w => ctx.fillRect(w.x, w.y, w.width, w.height));

  ctx.drawImage(shipImg, ship.x, ship.y, ship.width, ship.height);

  ctx.fillStyle = "white";
  ctx.font = "24px Arial";
  ctx.fillText("–û—á–∫–∏: " + score, 20, 30);
}


function gameLoop() {
  update();
  draw();
  if (gameRunning && !gamePaused) {
    animationFrame = requestAnimationFrame(gameLoop);
  }
}

// ====== –§–£–ù–ö–¶–ò–ò –î–õ–Ø –ö–ù–û–ü–û–ö ======
window.startGame = function () {
  if (!gameRunning) {
    gameRunning = true;
    gamePaused = false;

    // üé∂ –ó–∞–ø—É—Å–∫–∞–µ–º –º—É–∑—ã–∫—É —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Å—Ç–∞—Ä—Ç–µ
    if (bgMusic.paused) {
      bgMusic.play().catch(err => console.log("–ú—É–∑—ã–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω–∞:", err));
    }

    moneyInterval = setInterval(spawnMoney, 1500);
    wallInterval = setInterval(spawnWall, 2000);
    gameLoop();
  } else if (gamePaused) {
    gamePaused = false;
    gameLoop();

    // üé∂ –í–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º –º—É–∑—ã–∫—É –ø–æ—Å–ª–µ –ø–∞—É–∑—ã
    if (bgMusic.paused) {
      bgMusic.play().catch(err => console.log("–ú—É–∑—ã–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω–∞:", err));
    }
  }
};

window.pauseGame = function () {
  gamePaused = true;
  cancelAnimationFrame(animationFrame);

  // ‚è∏ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º—É–∑—ã–∫—É
  bgMusic.pause();
};

window.restartGame = function () {
  cancelAnimationFrame(animationFrame);
  clearInterval(moneyInterval);
  clearInterval(wallInterval);

  gameRunning = false;
  gamePaused = false;
  score = 0;
  ship = { x: 100, y: 300, width: 60, height: 60, speed: 5 };
  money = [];
  walls = [];

  // üîÅ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏ –ø–µ—Ä–µ–º–∞—Ç—ã–≤–∞–µ–º –º—É–∑—ã–∫—É
  bgMusic.pause();
  bgMusic.currentTime = 0;

  ctx.fillStyle = "black";
  ctx.fillRect(0, 0, canvas.width, canvas.height);
  ctx.fillStyle = "white";
  ctx.font = "24px Arial";
  ctx.fillText("–ù–∞–∂–º–∏—Ç–µ ‚ñ∂ –°—Ç–∞—Ä—Ç", 120, 200);
};

